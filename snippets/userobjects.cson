# Template for user objects

'.source.c, .source.cpp':
  'MOOSE user object header':
    'prefix': 'uo-h'
    'body': """
    #pragma once

    #include "${2:GeneralUserObject}.h"

    /**
     *
     */
    class ${1} : public ${2:GeneralUserObject}
    {
    public:
      static InputParameters validParams();

      ${1}(const InputParameters & parameters);

      virtual void initialize() override;
      virtual void execute() override;
      virtual void finalize() override;

      // only needed for ElementUserObjects and NodalUseroObjects
      virtual void threadJoin(const UserObject & y) override;
    };
    """

  'MOOSE user object implementation':
    'prefix': 'uo-c'
    'body': """
    #include "${1}.h"

    registerMooseObject("${3:AppName}App", ${1});

    InputParameters
    ${1}::validParams()
    {
      InputParameters params = validParams<${2:GeneralUserObject}>();
      params.addClassDescription("");
      return params;
    }

    ${1}::${1}(const InputParameters & parameters)
      : ${2:GeneralUserObject}(parameters)
    {
    }

    void
    ${1}::initialize()
    {
    }

    void
    ${1}::execute()
    {
    }

    void
    ${1}::finalize()
    {
    }

    void
    ${1}::threadJoin(const UserObject & y)
    {
      const ${1} & uo = static_cast<const ${1} &>(y);
    }
    """
