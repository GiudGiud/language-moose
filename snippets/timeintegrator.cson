# Template for TimeIntegrator

'.source.c, .source.cpp':
  'MOOSE time integrator header':
    'prefix': 'timeintegrator-h'
    'body': """
    #pragma once

    #include "TimeIntegrator.h"

    class ${1};

    template <>
    InputParameters
    validParams<${1}>();

    /**
     *
     */
    class ${1} : public TimeIntegrator
    {
    public:
      ${1}(const InputParameters & parameters);

      virtual int order() override;
      virtual void computeTimeDerivatives() override;
    };
    """

  'MOOSE time integrator implementation':
    'prefix': 'timeintegrator-c'
    'body': """
    #include "${1}.h"

    registerMooseObject("${2:AppName}App", ${1});

    template <>
    InputParameters
    validParams<${1}>()
    {
      InputParameters params = validParams<TimeIntegrator>();
      params.addClassDescription("");
      return params;
    }

    ${1}::${1}(const InputParameters & parameters)
      : TimeIntegrator(parameters)
    {
    }

    int
    ${1}::order()
    {
    }

    void
    ${1}::computeTimeDerivatives()
    {
    }
    """
