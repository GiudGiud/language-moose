# Template for MeshModifier

'.source.c, .source.cpp':
  'MOOSE mesh modifier header':
    'prefix': 'meshmodifier-h'
    'body': """
    #ifndef ${1/(.)/\\U$1/}_H
    #define ${1/(.)/\\U$1/}_H

    #include "MeshModifier.h"

    class ${1};

    template <>
    InputParameters
    validParams<${1}>();

    /**
     *
     */
    class ${1} : public MeshModifier
    {
    public:
      ${1}(const InputParameters & parameters);

      virtual void modify() override;
    };

    #endif // ${1/(.)/\\U$1/}_H
    """

  'MOOSE mesh modifier implementation':
    'prefix': 'meshmodifier-c'
    'body': """
    #include "${1}.h"

    registerMooseObject("${2}", ${1});

    template <>
    InputParameters
    validParams<${1}>()
    {
      InputParameters params = validParams<MeshModifier>();
      params.addClassDescription("");
      return params;
    }

    ${1}::${1}(const InputParameters & parameters)
      : MeshModifier(parameters)
    {
    }

    void
    ${1}::modify()
    {
    }
    """
