# Template for Function

'.source.c, .source.cpp':
  'MOOSE function header':
    'prefix': 'function-h'
    'body': """
    #ifndef ${1}_H
    #define ${1}_H

    #include "Function.h"

    class ${2};

    template<>
    InputParameters validParams<${2}>();

    /**
     *
     */
    class ${2} : public Function
    {
    public:
      ${2}(const InputParameters & parameters);

      virtual Real value(Real t, const Point & p) override;
    };

    #endif // ${1}_H
    """

  'MOOSE function implementation':
    'prefix': 'function-c'
    'body': """
    #include "${1}.h"

    registerMooseObject("${2}", ${1});

    template<>
    InputParameters validParams<${1}>()
    {
      InputParameters params = validParams<Function>();
      params.addClassDescription("");
      return params;
    }

    ${1}::${1}(const InputParameters & parameters)
      : Function(parameters)
    {
    }

    Real
    ${1}::value(Real t, const Point & p)
    {
    }
    """
