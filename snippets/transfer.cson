# Template for Transfer

'.source.c, .source.cpp':
  'MOOSE transfer header':
    'prefix': 'transfer-h'
    'body': """
    #ifndef ${1/(.)/\\U$1/}_H
    #define ${1/(.)/\\U$1/}_H

    #include "Transfer.h"

    class ${1};

    template <>
    InputParameters
    validParams<${1}>();

    /**
     *
     */
    class ${1} : public Transfer
    {
    public:
      ${1}(const InputParameters & parameters);

      virtual void execute() override;
    };

    #endif //${1/(.)/\\U$1/}_H
    """

  'MOOSE transfer implementation':
    'prefix': 'transfer-c'
    'body': """
    #include "${1}.h"

    registerMooseObject("${2}", ${1});

    template <>
    InputParameters
    validParams<${1}>()
    {
      InputParameters params = validParams<Transfer>();
      params.addClassDescription("");
      return params;
    }

    ${1}::${1}(const InputParameters & parameters)
      : Transfer(parameters)
    {
    }

    void
    ${1}::execute()
    {
    }
    """
